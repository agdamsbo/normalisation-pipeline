{
  "hash": "ebac4dd2e2a25e6fe78c4e129e934390",
  "result": {
    "markdown": "# Getting started {#sec-start}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"glossary_setup.R\")\n```\n:::\n\n\nYou need to have the following programs installed:\n\n-   [fsl](https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FSL) as well as\n\n-   [*R*](https://www.r-project.org/) and [RStudio (or similar)](https://posit.co/downloads/) installed.\n\n-   I also highly recommend the package [ITK-SNAP](http://itksnap.org/pmwiki/pmwiki.php?n=Main.HomePage), which can be used for some (semi-)manual mask modifications.\n\n-   You may want to use the powerful <a class='glossary' title='Advanced Normalization Tools. Source'>ANTs</a> package (or the underlying [`ANTsR` package](https://github.com/ANTsX/ANTsR)) for <a class='glossary' title='I this context, registration denotes to art of registrering to normal space. In this case to the MNI space. Think of it as normalising data.'>registration</a>. The included script, to is provided by [Dr. Dianne Patterson, PhD](https://neuroimaging-core-docs.readthedocs.io/en/latest/pages/ants_anat_normalization-lesion.html).\n\n## Let's get to it\n\n::: callout-warning\n## Keep a backup\n\nBefore starting, be warned. The script might override original data with modified data without warning. Please keep a backup of original files. Now you have been warned.\n:::\n\nScript files are located in the `codes` folder like below.\n\n\n::: {.cell}\n\n:::\n\n\n```         \n${normalisation-pipeline}\n├── ...\n├── codes\n   ├── 00norm_prep_pipeline.sh\n   ├── T1_2_MNI152_1mm.cnf\n   ├── ant_reg3_bbl.sh\n   ├── file-structure.R\n   ├── fsl_anat_alt_bbl.sh\n   ├── fsl_norm_bbl.sh\n   ├── modified_brain_mask_bbl.sh\n   ├── multi_punch.sh\n   ├── nemo-packing.R\n   ├── optiBET.sh\n   └── prep_T1w_bbl.sh\n├── ...\n```\n\n1.  Download or clone the repository to your computer and extract the folder if necessary. Move the contents of the `codes` folder to whereever you find appropriate (or just leave them for now). This is now the \"codes folder\" and will be referenced as `/codes/folder/` in the script examples. Edit this to run on your computer.\n\n    Now, open a terminal window and navigate to in the parent directory of your data folder, which we will now refer to as the \"root directory\".\n\n    This pipeline assumes, that your files are organised in the following way. This is not completely according to the <a class='glossary' title='Brain Imaging Data Structure. Source'>BIDS</a>-format, but that might be coming in the future. For now, this is the way:\n\n    ```         \n    ${ROOT}\n    ├── sub01\n        ├── sub01_T1w.nii.gz (T1 weighted base image)\n        ├── sub01_lesion.nii.gz (lesion mask, optional)\n    ├── subNN\n        ├── subNN_T1w.nii.gz\n        ├── subNN_lesion.nii.gz\n    ```\n\n    If, your files are like this, just jump ahead. If your files are all on one folder, but named as above, you can use the `file-prep.R` script to organise subject files into subfolders. Open the script and edit the first three variables. Save it and then, run the following in the terminal window:\n\n\n    ::: {.cell}\n    \n    ```{.bash .cell-code}\n    Rscript file-prep.R\n    ```\n    :::\n\n\n    Now the files and folders should be structured as expected.\n\n2.  *Optional*: If you want to do <a class='glossary' title='I this context, registration denotes to art of registrering to normal space. In this case to the MNI space. Think of it as normalising data.'>registration</a> to 1mm MNI space, you need to add a new config file to <a class='glossary' title='Thes picture viewing tool from the fsl-package. For more, click here.'>fsl</a>. If not, skip ahead. The config file is the `.cnf` file in your codes folder, and it can be copied to the correct location using the following command:\n\n\n    ::: {.cell}\n    \n    ```{.bash .cell-code}\n    imcp /codes/folder/T1_2_MNI152_1mm.cnf $FSLDIR/etc/flirtsch/T1_2_MNI152_1mm.cnf\n    ```\n    :::\n\n\n    Depending on what you are doing, you'll probably be fine doing 2mm registration, but for some use cases, the 1mm registration is necessary. [Here is a discussion, I found useful on doing 1 or 2 mm](https://www.jiscmail.ac.uk/cgi-bin/webadmin?A2=fsl;2fa01b76.1208).\n\n3.  Now you are ready for start data processing. The script has a few assumptions. It will look for a file with the file name pattern '*\\[Ll\\]esion*.nii.gz', and assume this is a lesion mask for the T1 weighted image (which should be named '\\*T1w.nii.gz'). You may optionally specify the lesion mask file name pattern used, eg: `sh 00norm_prep_pipeline.sh 1mm 'lesion.nii.gz'`. If no lesion mask is in the folder, the script will just perform skull stripping and registration of the head/brain. The script will also assume you want 2mm registration and do so with fsl. To view the documentation and see a few examples run this:\n\n\n    ::: {.cell}\n    \n    ```{.bash .cell-code}\n    sh /codes/folder/00norm_prep_pipeline.sh -h\n    ```\n    :::\n\n\n    Then, when ready run the main script with your desired settings. Now processing starts, and it will take some time. Sit back and relax while your computer hums away. Or do something else in the meantime. You'll get time stamps along the way to have an idea of the progress and the time needed. The output files are written along the way, so you can manually check the output while the script works. Note that your original T1 and lesion mask will have \"\\_orig\" appended as suffix and be substituted with corrected files. If the script gets interrupted, you can just restart it, and it will skip subjects already processed. Make sure you delete the output files, if you want the script to rerun on a specific subject.\n\n4.  Now it is time for quality control. Please refer to the separate @sec-qc on this. Then, you are done and can use these normalised files however you like.\n\n## Glossary\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:left;\"> definition </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> ANTs </td>\n   <td style=\"text-align:left;\"> Advanced Normalization Tools. [Source](https://github.com/ANTsX/ANTs) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> BIDS </td>\n   <td style=\"text-align:left;\"> Brain Imaging Data Structure. [Source](https://bids-standard.github.io/bids-starter-kit/index.html) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> fsleyes </td>\n   <td style=\"text-align:left;\"> Thes picture viewing tool from the fsl-package. For more, [click here](https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FSLeyes). </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> registration </td>\n   <td style=\"text-align:left;\"> I this context, registration denotes to art of registrering to normal space. In this case to the MNI space. Think of it as normalising data. </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n",
    "supporting": [
      "02-getting-started_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}